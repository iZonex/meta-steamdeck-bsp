#!/bin/bash
#
# Steam Deck Interactive Installer
# Supports multiple installation modes including failsafe and dual boot
#

set -e

VERSION="1.0.0"
INSTALLER_DIR="/usr/share/steamdeck-installer"

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
NC='\033[0m'

# Dialog configuration
DIALOG_HEIGHT=20
DIALOG_WIDTH=70

# Check if dialog is available
if ! command -v dialog >/dev/null 2>&1; then
    echo "Error: dialog not found. Please install dialog package."
    exit 1
fi

# Show welcome message
show_welcome() {
    if [ -f "$INSTALLER_DIR/installer-welcome.txt" ]; then
        dialog --title "Steam Deck Installer" \
               --textbox "$INSTALLER_DIR/installer-welcome.txt" \
               $DIALOG_HEIGHT $DIALOG_WIDTH
    else
        dialog --title "Steam Deck Installer" \
               --msgbox "Welcome to Steam Deck Linux Installer!\n\nThis installer will help you install Steam Deck Linux to your internal storage with various options including failsafe and dual boot support." \
               $DIALOG_HEIGHT $DIALOG_WIDTH
    fi
}

# Detect target disks
detect_disks() {
    local disks=()
    local disk_info=()
    
    # Find all block devices that look like internal storage
    for disk in /dev/nvme* /dev/sd*; do
        if [ -b "$disk" ] && [[ ! "$disk" =~ p[0-9]+$ ]] && [[ ! "$disk" =~ [0-9]+$ ]]; then
            # Skip USB devices (installer disk)
            if [[ "$disk" =~ /dev/sd ]] && udevadm info --query=property --name="$disk" | grep -q "ID_BUS=usb"; then
                continue
            fi
            
            local size=$(lsblk -bndo SIZE "$disk" 2>/dev/null || echo "0")
            local size_gb=$((size / 1024 / 1024 / 1024))
            local model=$(lsblk -ndo MODEL "$disk" 2>/dev/null || echo "Unknown")
            
            # Only show disks larger than 32GB (reasonable for Steam Deck)
            if [ $size_gb -gt 32 ]; then
                disks+=("$disk")
                disk_info+=("$disk ($model - ${size_gb}GB)")
            fi
        fi
    done
    
    if [ ${#disks[@]} -eq 0 ]; then
        dialog --title "Error" \
               --msgbox "No suitable target disks found!\n\nPlease ensure your Steam Deck's internal storage is properly connected." \
               $DIALOG_HEIGHT $DIALOG_WIDTH
        exit 1
    fi
    
    # Create dialog options
    local options=()
    for i in "${!disks[@]}"; do
        options+=("$i" "${disk_info[$i]}")
    done
    
    local choice
    choice=$(dialog --title "Select Target Disk" \
                    --menu "Choose the disk where you want to install Steam Deck Linux:" \
                    $DIALOG_HEIGHT $DIALOG_WIDTH 10 \
                    "${options[@]}" \
                    3>&1 1>&2 2>&3)
    
    if [ $? -ne 0 ]; then
        exit 1
    fi
    
    echo "${disks[$choice]}"
}

# Select installation mode
select_install_mode() {
    local choice
    choice=$(dialog --title "Installation Mode" \
                    --menu "Choose installation mode:" \
                    $DIALOG_HEIGHT $DIALOG_WIDTH 10 \
                    "failsafe" "A/B Failsafe System (Recommended)" \
                    "dualboot" "Dual Boot with SteamOS" \
                    "simple" "Simple Single Partition" \
                    3>&1 1>&2 2>&3)
    
    if [ $? -ne 0 ]; then
        exit 1
    fi
    
    echo "$choice"
}

# Show mode information
show_mode_info() {
    local mode="$1"
    local info_text=""
    
    case "$mode" in
        "failsafe")
            info_text="Failsafe A/B System Features:

• Two root partitions (A/B) for safe updates
• Automatic rollback on boot failure
• OTA updates with verification
• Recovery partition for emergencies
• Shared data partition for games/user data
• Maximum safety and reliability

Recommended for most users who want automatic updates with safety guarantees."
            ;;
        "dualboot")
            info_text="Dual Boot System Features:

• All failsafe A/B features included
• Preserves existing SteamOS installation
• Boot menu to choose between systems
• Shared EFI partition for both OS
• 10 second boot timeout

Perfect for users who want to keep SteamOS while trying Steam Deck Linux."
            ;;
        "simple")
            info_text="Simple System Features:

• Single root partition (traditional)
• Standard boot configuration
• Manual updates only
• Smaller disk space usage
• No automatic failsafe

For advanced users who prefer traditional Linux setup."
            ;;
    esac
    
    dialog --title "Installation Mode: $mode" \
           --msgbox "$info_text" \
           $DIALOG_HEIGHT $DIALOG_WIDTH
}

# Confirm installation
confirm_installation() {
    local target_disk="$1"
    local install_mode="$2"
    
    local warning_text="WARNING: This will ERASE all data on $target_disk!

Installation Details:
• Target Disk: $target_disk
• Mode: $install_mode
• All existing data will be lost

Are you absolutely sure you want to continue?"
    
    dialog --title "Final Confirmation" \
           --yesno "$warning_text" \
           $DIALOG_HEIGHT $DIALOG_WIDTH
    
    return $?
}

# Show installation progress
show_progress() {
    local title="$1"
    local message="$2"
    
    dialog --title "$title" \
           --infobox "$message\n\nPlease wait..." \
           10 50
}

# Run installation
run_installation() {
    local target_disk="$1"
    local install_mode="$2"
    
    # Clear screen and show progress
    clear
    echo -e "${BLUE}Steam Deck Linux Installer${NC}"
    echo "=========================="
    echo ""
    echo "Target Disk: $target_disk"
    echo "Mode: $install_mode"
    echo ""
    echo -e "${YELLOW}Installation in progress...${NC}"
    echo ""
    
    # Run the appropriate installer script
    if [ -f "/usr/bin/steamdeck-install-advanced.sh" ]; then
        /usr/bin/steamdeck-install-advanced.sh "$target_disk" "$install_mode"
    else
        # Fallback to simple installer
        /usr/bin/steamdeck-install.sh "$target_disk" "$install_mode"
    fi
    
    local exit_code=$?
    
    if [ $exit_code -eq 0 ]; then
        dialog --title "Installation Complete" \
               --msgbox "Steam Deck Linux has been successfully installed!\n\nYou can now remove the USB installer and reboot your Steam Deck.\n\nThe system will boot from the internal storage." \
               $DIALOG_HEIGHT $DIALOG_WIDTH
    else
        dialog --title "Installation Failed" \
               --msgbox "Installation failed with error code $exit_code.\n\nPlease check the console output for details and try again." \
               $DIALOG_HEIGHT $DIALOG_WIDTH
        return $exit_code
    fi
}

# Show post-installation information
show_post_install_info() {
    local install_mode="$1"
    
    local info_text="Installation Complete!

Your Steam Deck Linux system is ready to use.

"
    
    case "$install_mode" in
        "failsafe")
            info_text+="Failsafe System Commands:
• steamdeck-ab-manager status - Check A/B status
• steamdeck-ota-update - Check for updates
• steamdeck-recovery menu - Recovery tools

The system will automatically rollback if updates fail."
            ;;
        "dualboot")
            info_text+="Dual Boot System:
• Boot menu will appear on startup
• Choose between Steam Deck Linux and SteamOS
• Default timeout: 10 seconds

Failsafe commands are also available."
            ;;
        "simple")
            info_text+="Simple System:
• Traditional Linux installation
• Manual updates recommended
• Use standard package manager"
            ;;
    esac
    
    info_text+="

Default Login:
• Username: deck
• Password: deck

Remember to change the password after first login!"
    
    dialog --title "System Ready" \
           --msgbox "$info_text" \
           $DIALOG_HEIGHT $DIALOG_WIDTH
}

# Main installation flow
main() {
    # Check if running as root
    if [ "$EUID" -ne 0 ]; then
        echo "Error: This installer must be run as root."
        echo "Please run: sudo $0"
        exit 1
    fi
    
    # Show welcome
    show_welcome
    
    # Detect target disk
    local target_disk
    target_disk=$(detect_disks)
    
    # Select installation mode
    local install_mode
    install_mode=$(select_install_mode)
    
    # Show mode information
    show_mode_info "$install_mode"
    
    # Confirm installation
    if ! confirm_installation "$target_disk" "$install_mode"; then
        dialog --title "Installation Cancelled" \
               --msgbox "Installation has been cancelled by user." \
               10 50
        exit 0
    fi
    
    # Run installation
    if run_installation "$target_disk" "$install_mode"; then
        show_post_install_info "$install_mode"
        
        # Ask about reboot
        if dialog --title "Reboot Now?" \
                  --yesno "Would you like to reboot now to start using your new system?" \
                  10 50; then
            reboot
        fi
    else
        echo "Installation failed. Please check the output above for errors."
        exit 1
    fi
}

# Handle command line arguments
case "${1:-interactive}" in
    "interactive"|"")
        main
        ;;
    "version")
        echo "steamdeck-installer version $VERSION"
        ;;
    "help"|"-h"|"--help")
        echo "Steam Deck Linux Installer"
        echo ""
        echo "Usage: $0 [command]"
        echo ""
        echo "Commands:"
        echo "  interactive  - Run interactive installer (default)"
        echo "  version      - Show version information"
        echo "  help         - Show this help message"
        ;;
    *)
        echo "Unknown command: $1"
        echo "Run '$0 help' for usage information."
        exit 1
        ;;
esac 